@import "tailwindcss";
@tailwind base;
@tailwind components;
@tailwind utilities;

/* ---- bulbs: soft glow ---- */
@keyframes bulb-glow {
  0%   { box-shadow: 0 0 6px rgba(255,255,255,.9), 0 0 18px rgba(255,255,255,.65); }
  50%  { box-shadow: 0 0 10px rgba(255,255,255,1), 0 0 26px rgba(255,255,255,.9); }
  100% { box-shadow: 0 0 6px rgba(255,255,255,.9), 0 0 18px rgba(255,255,255,.65); }
}
.bulb-glow {
  animation: bulb-glow 1.8s ease-in-out infinite;
  filter: drop-shadow(0 0 2px rgba(255,255,255,.8));
}

/* --- scroll-in (左右から) --- */
.reveal {
  opacity: 0;
  transform: translateX(var(--reveal-x, 0));
  transition: transform .7s cubic-bezier(.22,.8,.32,1), opacity .7s ease;
  will-change: transform, opacity;
}
.reveal.in {
  opacity: 1;
  transform: translateX(0);
}

.yarl__slide_image {
  object-fit: contain;  /* 余白ありで揃える */
  max-height: 80vh;     /* 高さを統一 */
  max-width: 100vh;
}

/* ===== ネオン管ヘッダー用 ===== */
.contact-section .neon-tube-wrap {
  display: inline-block;
  line-height: 1;
}
.contact-section .neon-tube {
  display: block;
  width: 100%;
  height: auto;
}
.contact-section .neon-tube .tube {
  fill: none;
  paint-order: stroke fill;
  stroke-linecap: round;
  stroke-linejoin: round;
  /* SVG でも効く */
  font-family: inherit;
  font-weight: 800;
  letter-spacing: .02em;
  font-size: clamp(36px, 6vw, 72px);
  transition: opacity .28s ease, filter .28s ease, stroke .28s ease;
}

/* 後ろのカラー管（OFF時はうっすら） */
.contact-section .tube-back {
  stroke: hsl(var(--tube-hue) 95% 60%);
  stroke-width: 16;
  opacity: .35;
}

/* 近距離グロー（点灯で現れる） */
.contact-section .tube-glow1 {
  stroke: hsl(var(--tube-hue) 100% 60%);
  stroke-width: 16;
  filter: none;
  opacity: 0;
}

/* 遠距離グロー（点灯でふわっと） */
.contact-section .tube-glow2 {
  stroke: hsl(var(--tube-hue) 100% 55%);
  stroke-width: 16;
  filter: none;
  opacity: 0;
}

/* 中央の白い管（芯） */
.contact-section .tube-core {
  stroke: #eaffff;
  stroke-width: 6;
  opacity: .8;
  /* 線の輪郭をシャープに */
  filter: saturate(1.05);
}

/* ARMED：見えてから待機中（ほんのり） */
.contact-section .is-armed .tube-back   { opacity: .75; }
.contact-section .is-armed .tube-core   { opacity: .9;  }

/* ON：本点灯（“パッ”） */
.contact-section .is-on .tube-back    { opacity: 1; }
.contact-section .is-on .tube-glow1   { opacity: .85; filter: url(#glow-strong); }
.contact-section .is-on .tube-glow2   { opacity: .45; filter: url(#glow-wide);  }
.contact-section .is-on .tube-core    { opacity: 1; }

/* 追加のギラッ（任意）：ホバーで少し強く */
@media (hover:hover) {
  .contact-section .is-on .neon-tube-wrap:hover .tube-glow1 { opacity: .95; }
  .contact-section .is-on .neon-tube-wrap:hover .tube-glow2 { opacity: .55; }
}

/* === Swiper global fixes === */
.swiper{ width:100%; }
.swiper-slide{
  display:flex; justify-content:center; align-items:center;
}

/* Swiper 本体（グローバル） */
.swiper{ width:100%; }
.swiper-slide{
  display:flex; justify-content:center; align-items:center;
  transform: scale(.8) translateZ(-100px);
  z-index:1; opacity:.5; filter: blur(.5px) brightness(.7);
  transition: transform .4s ease, z-index .4s ease, filter .4s ease, opacity .4s ease;
}
.swiper-slide-active{
  transform: scale(1) translateZ(0);
  z-index:10; opacity:1; filter: none;
}
.swiper-slide-prev,
.swiper-slide-next{
  transform: scale(.7) rotateY(15deg) translateZ(-200px);
  z-index:0; filter: brightness(.4) blur(1.5px);
}
/* Swiper切替直後のリセット（CSS Modules対応） */
.swiper-slide.gsap-init {
  transform: none !important;
  opacity: 1 !important;
  filter: none !important;
}

/* === Glitch (強化版) === */
.glitch{ position:relative; display:inline-block; }
.glitch::before,
.glitch::after{
  content:attr(data-text);
  position:absolute; inset:0;
  font:inherit; letter-spacing:inherit;
  opacity:0; mix-blend-mode:screen; pointer-events:none;
}

/* 本体の軽い揺れ（要らなければ削除可） */
@keyframes glitch-shake {
  0%{ transform:translate(0,0) } 25%{ transform:translate(1px,-1px) }
  50%{ transform:translate(-1px,1px) } 75%{ transform:translate(1px,0) }
  100%{ transform:none }
}
.glitch.on{ animation:glitch-shake .45s ease both; }

/* ダブり文字：色ズレ＋スライス */
@keyframes g-slice {
  0%{ clip-path:inset(0 0 80% 0) }
  20%{ clip-path:inset(10% 0 40% 0) }
  40%{ clip-path:inset(35% 0 20% 0) }
  60%{ clip-path:inset(60% 0 10% 0) }
  80%{ clip-path:inset(75% 0 0 0) }
  100%{ clip-path:inset(0 0 0 0) }
}
@keyframes g-shift {
  0%{ transform:translate(0,0) }
  20%{ transform:translate(2px,-1px) }
  40%{ transform:translate(-2px,1px) }
  60%{ transform:translate(1px,-2px) }
  80%{ transform:translate(-1px,2px) }
  100%{ transform:none }
}

/* ← これが無いと“揺れるだけ”になります */
.glitch.on::before,
.glitch.on::after { opacity:1; }

.glitch.on::before{
  color:#ff4;  /* 赤みのある黄：ブランド色に合わせてOK */
  animation: g-slice .55s steps(10) both, g-shift .55s steps(10) both;
}
.glitch.on::after{
  color:#3df;  /* シアン */
  animation: g-slice .55s steps(10) reverse both, g-shift .55s steps(10) reverse both;
}



:root {
  --background: #ffffff;
  --foreground: #171717;
}

/* ===== Theme: Teal x Purple ===== */
/* Purple(#662f8f) base + Green link(#09943b) */
.footer--purpleGreen{
  --base:#662f8f;          /* フッター背景 */
  --ink:#F3F6F8;           /* テキスト（明るめに変更） */
  --a1:#09943b;            /* リンク色 */
  --a2:#b98ae9;            /* フォーカスリング/補助（薄い紫） */
  --glow-a:0 0 12px rgba(9,148,59,.55),0 0 24px rgba(185,138,233,.25);
}

/* ウォーターマークは白寄りで薄く */
.footer--purpleGreen .watermark{
  color: rgba(255,255,255,.26);
}

.footer-theme-a{ color:var(--ink); background:var(--base); }

/* 下線が伸びる＋薄いグロー */
.link-glow{
  background:linear-gradient(currentColor,currentColor) 0 100%/0% 2px no-repeat;
  transition:background-size .35s ease, filter .25s ease, color .25s ease;
}
.link-glow:hover{
  background-size:100% 2px;
  filter:drop-shadow(var(--glow-a));
  color:var(--a1);
}

/* 到達時に1回だけ強め→穏やかにゆらぐ */
@keyframes neon-once{
  0%{filter:brightness(1)}
  8%{filter:brightness(2.1)}
  14%{filter:brightness(.85)}
  24%{filter:brightness(2.6)}
  100%{filter:brightness(1.18)}
}
@keyframes neon-idle{
  0%,100%{opacity:1}
  50%{opacity:.96}
}
.footer-neon-once{ animation:neon-once .9s ease-out both }
.footer-neon-idle{ animation:neon-idle 3.8s ease-in-out infinite }

/* ロゴの“呼吸” */
@keyframes breathe{ 0%,100%{transform:scale(1)} 50%{transform:scale(1.015)} }
.logo-breathe{ animation:breathe 6s ease-in-out infinite }

/* 面全体に超弱シマー */
@keyframes shine{ from{background-position:-200% 0} to{background-position:200% 0} }
.footer-shine{
  background-image:linear-gradient(90deg,transparent,rgba(255,255,255,.08),transparent);
  background-size:200% 100%;
  animation:shine 8s linear infinite;
  pointer-events:none;
}

/* 初期状態：左(または右)へオフセット & 透明 */
.reveal { 
  opacity: 0;
  transform: translateX(var(--reveal-x, 0));
  transition: opacity .5s ease, transform .5s ease;
}

/* 発火後：不透明 & 位置リセット */
.reveal.in {
  opacity: 1;
  transform: translateX(0);
}



/* パララックス用のCSS変数（JSで更新） */
.watermark{
  transform:translateY(var(--wm-y,24px));
  opacity:var(--wm-o,0);
  transition:opacity .25s ease;
}

@media (prefers-reduced-motion: reduce){
  .footer-neon-once,.footer-neon-idle,.logo-breathe,.footer-shine{ animation:none }
  .watermark{ transform:none!important }
}


@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}
